// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using satinalma.Data;

#nullable disable

namespace satinalma.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250413131244_yorum")]
    partial class yorum
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("satinalma.Models.cart", b =>
                {
                    b.Property<int>("cart_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cart_id"), 1L, 1);

                    b.Property<int?>("Customerscustomer_id")
                        .HasColumnType("int");

                    b.Property<int?>("Productsproduct_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("added_at")
                        .HasColumnType("datetime2");

                    b.Property<int?>("customer_id")
                        .HasColumnType("int");

                    b.Property<int?>("product_id")
                        .HasColumnType("int");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.HasKey("cart_id");

                    b.HasIndex("Customerscustomer_id");

                    b.HasIndex("Productsproduct_id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("satinalma.Models.categories", b =>
                {
                    b.Property<int?>("category_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("category_id"), 1L, 1);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("category_id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("satinalma.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CommentId");

                    b.HasIndex("ProductId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("satinalma.Models.customers", b =>
                {
                    b.Property<int>("customer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("customer_id"), 1L, 1);

                    b.Property<string>("billing_address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password_hash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shipping_address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("customer_id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("satinalma.Models.OrderDetails", b =>
                {
                    b.Property<int>("order_detail_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("order_detail_id"), 1L, 1);

                    b.Property<int?>("Ordersorder_id")
                        .HasColumnType("int");

                    b.Property<int>("order_id")
                        .HasColumnType("int");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<int?>("product_id1")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("unit_price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("order_detail_id");

                    b.HasIndex("Ordersorder_id");

                    b.HasIndex("product_id1");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("satinalma.Models.Orders", b =>
                {
                    b.Property<int>("order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("order_id"), 1L, 1);

                    b.Property<string>("billing_address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("customer_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("order_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("shipping_address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("total_amount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("order_id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("satinalma.Models.Payments", b =>
                {
                    b.Property<int>("payment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("payment_id"), 1L, 1);

                    b.Property<int?>("Ordersorder_id")
                        .HasColumnType("int");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("order_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("payment_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("payment_method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("payment_status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("payment_id");

                    b.HasIndex("Ordersorder_id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("satinalma.Models.product", b =>
                {
                    b.Property<int>("product_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("product_id"), 1L, 1);

                    b.Property<int?>("Categoriescategory_id")
                        .HasColumnType("int");

                    b.Property<string>("Picture_Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("category_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("stock_quantity")
                        .HasColumnType("int");

                    b.HasKey("product_id");

                    b.HasIndex("Categoriescategory_id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("satinalma.Models.product_reviews", b =>
                {
                    b.Property<int>("review_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("review_id"), 1L, 1);

                    b.Property<int?>("Customerscustomer_id")
                        .HasColumnType("int");

                    b.Property<string>("comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("customer_id")
                        .HasColumnType("int");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<int?>("product_id1")
                        .HasColumnType("int");

                    b.Property<int>("rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("review_date")
                        .HasColumnType("datetime2");

                    b.HasKey("review_id");

                    b.HasIndex("Customerscustomer_id");

                    b.HasIndex("product_id1");

                    b.ToTable("product_Reviews");
                });

            modelBuilder.Entity("satinalma.Models.cart", b =>
                {
                    b.HasOne("satinalma.Models.customers", "Customers")
                        .WithMany("Carts")
                        .HasForeignKey("Customerscustomer_id");

                    b.HasOne("satinalma.Models.product", "Products")
                        .WithMany("Carts")
                        .HasForeignKey("Productsproduct_id");

                    b.Navigation("Customers");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("satinalma.Models.Comment", b =>
                {
                    b.HasOne("satinalma.Models.product", "Product")
                        .WithMany("Comments")
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("satinalma.Models.OrderDetails", b =>
                {
                    b.HasOne("satinalma.Models.Orders", "Orders")
                        .WithMany("Details")
                        .HasForeignKey("Ordersorder_id");

                    b.HasOne("satinalma.Models.product", "Product")
                        .WithMany("Details")
                        .HasForeignKey("product_id1");

                    b.Navigation("Orders");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("satinalma.Models.Payments", b =>
                {
                    b.HasOne("satinalma.Models.Orders", "Orders")
                        .WithMany("Payments")
                        .HasForeignKey("Ordersorder_id");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("satinalma.Models.product", b =>
                {
                    b.HasOne("satinalma.Models.categories", "Categories")
                        .WithMany("products")
                        .HasForeignKey("Categoriescategory_id");

                    b.Navigation("Categories");
                });

            modelBuilder.Entity("satinalma.Models.product_reviews", b =>
                {
                    b.HasOne("satinalma.Models.customers", "Customers")
                        .WithMany("reviews")
                        .HasForeignKey("Customerscustomer_id");

                    b.HasOne("satinalma.Models.product", "Product")
                        .WithMany("reviews")
                        .HasForeignKey("product_id1");

                    b.Navigation("Customers");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("satinalma.Models.categories", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("satinalma.Models.customers", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("reviews");
                });

            modelBuilder.Entity("satinalma.Models.Orders", b =>
                {
                    b.Navigation("Details");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("satinalma.Models.product", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Comments");

                    b.Navigation("Details");

                    b.Navigation("reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
